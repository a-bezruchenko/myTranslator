{
    "indentation": {
      "regexp": "^(\\s+)",
      "skip": true
    },
    "comment": {
      "regexp": "^\\(\\*[\\w\\W]*?\\*\\)",
      "skip": true
    },
    "keyword": {
      "regexp": "^([A-Z]{2,})",
      "list" : [
          "ARRAY", "BEGIN","CASE", "CONST","DO","ELSE",
          "ELSIF", "END", "EXIT", "IF", "IMPORT", "IN", "IS", 
          "LOOP", "MODULE", "NIL", "OF", "POINTER",
          "PROCEDURE", "RECORD", "REPEAT", "RETURN", "THEN",
          "TO","TYPE", "UNTIL", "VAR", "WHILE", "WITH"
        ]
    },
    "predefined" : {
        "regexp": "^([A-Z]{3,})",
        "list": [
                "ABS", "ASH", "BOOLEAN", "BYTE", "CAP", "CHAR",
                "CHR", "DEC", "ENTIER", "EXCL","FALSE", "HALT",
                "INC", "INCL", "INTEGER", "LEN", "LONG",
                "LONGINT","LONGREAL", "MAX", "MIN", "NEW", 
                "ODD", "ORD", "REAL","SET", "SHORT", 
                "SHORTINT", "SIZE", "TRUE",
                "PRINT", "READ"
            ]
        
    },
    "operator": {
      "regexp": "^([^\\w\\d\\s]{1,2}|\\w{2,3})",
      "list" : ["+", "-", "*", "/", "DIV", "MOD", ":=", "=", "#", "<=", ">=", "<", ">", "&", "OR", "~", "..", "*"]
    },
    "hex_dig_const": {
      "regexp": "^(\\d[ABCDEF\\d]+H)",
      "link": "arrayOfConst"
    },
    "real_dig_const": {
      "regexp": "^(\\d+\\.\\d*([ED][\\+\\-]\\d+)?)",
      "link": "arrayOfConst"
    },
    "char_const": {
      "regexp": "^(\\\"\\w\\\"|\\d[ABCDEF\\d]+X)",
      "link": "arrayOfConst"
    },
    "string_const": {
      "regexp": "^(\\\"[\\w\\W]*?\\\")",
      "link": "arrayOfConst"
    },
    "int_dig_const": {
      "regexp": "^(\\d+)",
      "link": "arrayOfConst"
    },
    "ident": {
      "regexp": "^([a-zA-Z]\\w*)",
      "link": "arrayOfIdent"
    },
    "separator": {
      "regexp": "^([^\\w\\d\\s])",
      "list": ["(", ")", "{", "}", ";", ":", ",", ".", "|", "[", "]"]
    },
    "error": {
      "regexp": "^(.*?)(?=[\\s][^\\w])"
    }
  }
